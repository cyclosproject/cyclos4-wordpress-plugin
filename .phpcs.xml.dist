<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Cyclos Plugin" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/squizlabs/PHP_CodeSniffer/master/phpcs.xsd">
    <description>Coding standards for the Cyclos WordPress Plugin.</description>

    <!-- Exclude some directories or files. -->
    <exclude-pattern>/vendor/*</exclude-pattern>
    <exclude-pattern>/node_modules/*</exclude-pattern>
    <exclude-pattern>/build/*</exclude-pattern>
	<!-- Instead of excluding minified js, only include php files. -->
    <!-- <exclude-pattern>*.min.js</exclude-pattern> -->

	<!-- Limit to php files only (JS and CSS are checked with eslint and stylelint) -->
	<arg name="extensions" value="php"/>

    <!-- The coding standards to use. -->
    <rule ref="WordPress">
	    <!--
		Add the entire ruleset, then remove rules that don't suit the project.
		Running `phpcs` with the '-s' flag, you see the names of the sniffs reporting errors.
		Once we know the sniff names, exclude sniffs which we don't want, like this:
		-->
		<!--
		<exclude name="WordPress.WhiteSpace.ControlStructureSpacing"/>
		<exclude name="WordPress.Security.EscapeOutput"/>
		-->
    </rule>

	<!-- Use PSR-4 standards for class filenames instead of the older WP standards. -->
	<rule ref="WordPress.Files.FileName">
		<exclude-pattern>/app/*</exclude-pattern>
	</rule>

	<!-- Add in some extra rules from other standards. -->
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter">
		<!-- Hook callbacks may not use all params. See: https://github.com/WordPress/WordPress-Coding-Standards/pull/382. -->
		<exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundBeforeLastUsed"/>
	</rule>
	<rule ref="Generic.Commenting.Todo"/>

	<!-- Check for PHP cross-version compatibility. -->
	<!--
	To enable this, the PHPCompatibilityWP standard needs to be installed.
	See the readme for installation instructions: https://github.com/PHPCompatibility/PHPCompatibilityWP
	For more information, also see: https://github.com/PHPCompatibility/PHPCompatibility
	-->
	<config name="testVersion" value="7.2-"/>
	<rule ref="PHPCompatibilityWP"/>

	<!--
	To get the optimal benefits of using WPCS, we should add a couple of custom properties.
	Adjust the values of these properties to fit our needs.

	For information on additional custom properties available, check out the wiki:
	https://github.com/WordPress/WordPress-Coding-Standards/wiki/Customizable-sniff-properties
	-->
	<config name="minimum_supported_wp_version" value="4.9"/>

	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array">
				<element value="cyclos"/>
			</property>
		</properties>
	</rule>

	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<property name="prefixes" type="array">
				<element value="cyclos"/>
			</property>
		</properties>
	</rule>

</ruleset>
